{"version":3,"sources":["utilities/api/endpoints.ts","utilities/api/interactionManager.ts"],"names":["baseUrl","process","sellers","charges","vouchers","vouchers20Count","campaigns","fees","passportVouchers","contacts","sponsorSellers","CACHE","expiration_time","Date","now","getSellers","lang","a","current_time","Object","entries","length","axios","get","params","locale","localeFromLanguage","result","getSeller","id","getSellerHours","getSellerDeliveryOptions","makeSquarePayment","nonce","sellerId","payment","buyer","isDistribution","campaignId","projectId","metadata","email","name","idempotencyKey","idempotency_key","isSubscribed","is_subscribed","post","is_square","line_items","seller_id","project_id","is_distribution","campaign_id","headers","then","res","catch","err","getVoucher","updateVoucher","amount","put","getMerchantGiftCards","secret","filterGAM","filterGAMString","language","getCampaigns","getPastCampaigns","pageNo","getCampaignsForMerchant","getFee","getDistributor","getFiscalSponsor","getAllParticipatingSellers","getParticipatingMerchant","getParticipatingMerchantTickets","tickets_secret","page","items","printed","associated","getPassportEmailId","createPassportEmailId","instagram","getPassportTickets","passportId","getLocationById","locationId","getOneSponsor","rewardId","redeemReward","contact_id","auth_token","tickets","getLyftReward","redeemToken","token","sendImage","signedUrl","filename","image","type","getUploadUrl","filetype","file_name","file_type","uploadCrawlReceipts","participating_seller_id","receipt_url","getCrawlRewards","redeemRaffle","reward_id","getCrawlReceipts","getRedeemedRewards","getAuthGoogle","requestAuthPasswordless","validateSession","validateStatus","status","withCredentials","getCurrentPageVouchers","getAllVouchers","getVoucherMetadata","getTotalContributions"],"mappings":"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","file":"static/js/1.e08103e1.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_ENDPOINT!;\n\nexport const sellers = baseUrl + 'sellers/';\nexport const totalContributions = baseUrl + 'sellers/total_contributions';\nexport const charges = baseUrl + 'charges';\nexport const vouchers = baseUrl + 'gift_cards/';\nexport const vouchers20Count = vouchers + '?items=20&page=';\nexport const vouchersMetadata = vouchers + 'metadata';\nexport const campaigns = baseUrl + 'campaigns/';\nexport const fees = baseUrl + 'fees/';\nexport const distributors = baseUrl + 'distributors/';\nexport const nonprofits = baseUrl + 'nonprofits/';\nexport const passportVouchers = baseUrl + 'participating_sellers/';\nexport const contacts = baseUrl + 'contacts/';\nexport const tickets = baseUrl + 'tickets/';\nexport const participatingSellers = baseUrl + 'participating_sellers/';\nexport const sponsorSellers = baseUrl + 'sponsor_sellers/';\nexport const locations = baseUrl + 'locations/';\nexport const lyftRewards = 'lyft_rewards/';\nexport const projects = baseUrl + 'projects/';\nexport const gcs = baseUrl + 'gcs/';\nexport const crawlReceipts = baseUrl + 'crawl_receipts/';\nexport const crawlRewards = baseUrl + 'rewards/';\nexport const crawlRedemptions = baseUrl + 'redemptions/';\nexport const authGoogle = baseUrl + 'auth/google';\nexport const authPasswordless = baseUrl + 'auth/passwordless';\nexport const authValidate = baseUrl + 'auth/validate';\n","import axios from 'axios';\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Buyer, PaymentParams, SquareLineItems } from './types';\nimport {\n  charges,\n  sellers,\n  vouchers,\n  vouchers20Count,\n  vouchersMetadata,\n  campaigns,\n  fees,\n  distributors,\n  passportVouchers,\n  contacts,\n  tickets,\n  participatingSellers,\n  sponsorSellers,\n  locations,\n  lyftRewards,\n  nonprofits,\n  projects,\n  gcs,\n  crawlReceipts,\n  crawlRedemptions,\n  crawlRewards,\n  authGoogle,\n  authPasswordless,\n  authValidate,\n  totalContributions,\n} from './endpoints';\n\n// Fix return typing\n\nlet CACHE = {};\nconst cache_duration = 300; // 5 minutes expressed in seconds\nlet expiration_time = ~~(Date.now() / 1000); // time in seconds\n\nexport const getSellers = async (lang?: string): Promise<any> => {\n  const current_time = ~~(Date.now() / 1000);\n  if (Object.entries(CACHE).length !== 0 && expiration_time > current_time) {\n    return CACHE;\n  }\n  const result = await axios.get(sellers, {\n    params: { locale: localeFromLanguage(lang) },\n  });\n  CACHE = result;\n  expiration_time = current_time + cache_duration;\n  return CACHE;\n};\n\nexport const getSeller = async (id: string, lang?: string): Promise<any> => {\n  return await axios.get(sellers + id, {\n    params: { locale: localeFromLanguage(lang) },\n  });\n};\n\nexport const getSellerHours = async (id: string): Promise<any> => {\n  return await axios.get(sellers + id + '/open_hour');\n};\n\nexport const getSellerDeliveryOptions = async (id: string): Promise<any> => {\n  return await axios.get(sellers + id + '/delivery_options');\n};\n\n// TODO(ArtyEmsee): add typing for stripe elements\nexport const makePayment = async (\n  stripe: any,\n  elements: any,\n  payment: PaymentParams,\n  buyer: Buyer\n) => {\n  const { email, name } = buyer;\n\n  // TODO(ArtyEmsee): abstract api call, create global object for headers\n  await axios\n    .post(\n      charges,\n      {\n        is_square: false,\n        line_items: [payment],\n        email: email,\n      },\n      { headers: { 'Access-Control-Allow-Origin': '*' } }\n    )\n    .then(async (res) => {\n      // TODO(ArtyEmsee): fix response to success\n      if (!stripe || !elements) return;\n      else {\n        const cardElement = elements!.getElement(CardElement);\n        const result = await stripe!.confirmCardPayment(\n          `${res.data.client_secret}`,\n          {\n            payment_method: {\n              card: cardElement!,\n              billing_details: {\n                name: name,\n                email: email,\n              },\n            },\n          }\n        );\n\n        if (result.error) {\n          console.log(result.error.message);\n        } else {\n          if (result.paymentIntent?.status === 'succeeded') {\n            console.log(\n              result.paymentIntent?.status,\n              'The payment has been processed!'\n            );\n          }\n        }\n      }\n    });\n\n  // TODO(ArtyEmsee): fix response to error\n};\n\nexport const makeSquarePayment = async (\n  nonce: string,\n  sellerId: string,\n  payment: SquareLineItems,\n  buyer: Buyer,\n  isDistribution: boolean,\n  campaignId?: string,\n  projectId?: string,\n  metadata?: string | null\n) => {\n  const { email, name } = buyer;\n  const idempotencyKey = buyer.idempotency_key;\n  const isSubscribed = buyer.is_subscribed;\n\n  return await axios\n    .post(\n      charges,\n      {\n        is_square: true,\n        nonce,\n        line_items: payment,\n        email,\n        name,\n        seller_id: sellerId,\n        project_id: projectId,\n        idempotency_key: idempotencyKey,\n        is_subscribed: isSubscribed,\n        is_distribution: isDistribution, // TODO: deprecate this in favor of campaignId\n        campaign_id: campaignId,\n        metadata: metadata,\n      },\n      { headers: { 'Access-Control-Allow-Origin': '*' } }\n    )\n    .then(async (res) => {\n      return res;\n    })\n    .catch((err) => {\n      throw err;\n    });\n};\n\nexport const getVoucher = async (id: string) =>\n  axios\n    .get(vouchers + id)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const updateVoucher = async (id: string, amount: number) =>\n  axios\n    .put(vouchers + id, { amount })\n    .then((res) => res)\n    .catch((err) => {\n      throw err;\n    });\n\nexport const getMerchantGiftCards = async (\n  seller_id: string,\n  secret: string,\n  filterGAM: boolean = false\n) => {\n  const filterGAMString = filterGAM ? '?filterGAM=true' : ''; // if the key is present at all, filtering will happen\n  return axios\n    .get(sellers + seller_id + '/gift_cards/' + secret + filterGAMString)\n    .then((res) => res); // don't catch error, throw it up the stack\n};\n\nfunction localeFromLanguage(language?: string) {\n  switch (language) {\n    case 'cn':\n      return 'zh-CN';\n    case 'en':\n    default:\n      return 'en';\n  }\n}\n\nexport const getCampaigns = async (): Promise<any> => {\n  return await axios\n    .get(campaigns)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getPastCampaigns = async (pageNo = 1): Promise<any> => {\n  return await axios\n    .get(`${campaigns}?inactive=true&items=10&page=${pageNo}`)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getCampaignsForMerchant = async (\n  seller_id: string\n): Promise<any> => {\n  return await axios\n    .get(sellers + seller_id + '/campaigns')\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getFees = async () => {\n  return await axios\n    .get(fees)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getFee = async (name: string) => {\n  return await axios\n    .get(fees + name)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getDistributor = async (id: string): Promise<any> => {\n  return await axios\n    .get(distributors + id)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getFiscalSponsor = async (id: number): Promise<any> => {\n  return await axios\n    .get(nonprofits + id)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const getAllParticipatingSellers = async (): Promise<any> =>\n  axios\n    .get(passportVouchers)\n    .then((res) => res)\n    .catch((err) => err);\n\n// for passport crawl voucher print outs\nexport const getParticipatingMerchant = async (id: string) =>\n  axios\n    .get(passportVouchers + id)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getParticipatingMerchantTickets = async (\n  id: string,\n  tickets_secret: string,\n  page: number | null,\n  items: number | null,\n  printed: boolean | null,\n  associated: boolean | null\n) =>\n  axios\n    .get(passportVouchers + id + '/tickets/' + tickets_secret, {\n      params: { page, items, printed, associated },\n    })\n    .then((res) => res)\n    .catch((err) => err);\n\n// validate passport email\nexport const getPassportEmailId = async (email: string) =>\n  axios\n    .get(contacts, {\n      params: { email },\n    })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getContactInfo = async (passportId: string) =>\n  axios\n    .get(contacts + passportId)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const createPassportEmailId = async (\n  email: string,\n  instagram?: string\n) => {\n  let params = {};\n\n  params = instagram ? { email, instagram } : { email };\n\n  return axios\n    .post(contacts, params)\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const updatePassportInstagram = async (\n  id: string,\n  instagram: string\n) => {\n  return axios\n    .put(contacts + id, { instagram })\n    .then((res) => res)\n    .catch((err) => err);\n};\n\nexport const checkForValidTicket = async (ticket_id: string) =>\n  axios\n    .get(tickets + ticket_id)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const updateTicketContactId = async (\n  ticket_id: string,\n  contact_id: string\n) =>\n  axios\n    .put(tickets + ticket_id, { contact_id })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getPassportTickets = async (passportId: string) =>\n  axios\n    .get(contacts + passportId + '/tickets')\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getParticipatingSeller = async (sellerId: string) =>\n  axios\n    .get(participatingSellers + sellerId)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getGiveawayTicketsForContact = async (contactId: string) =>\n  axios\n    .get(contacts + contactId)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const sendRedeemTicketsEmail = async (passportId: string) =>\n  axios\n    .post(contacts + passportId + '/rewards')\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getLocationById = async (locationId: number) =>\n  axios\n    .get(locations + locationId)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getAllSponsors = async () =>\n  axios\n    .get(sponsorSellers)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getOneSponsor = async (rewardId: number) =>\n  axios\n    .get(sponsorSellers + rewardId)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const redeemReward = async (\n  contact_id: number,\n  auth_token: string,\n  tickets: Array<any>\n) =>\n  axios\n    .put(contacts + contact_id + '/tickets/' + auth_token, { tickets })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const createLyftReward = async (contact_id: number) =>\n  axios\n    .post(contacts + contact_id + '/' + lyftRewards)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getLyftReward = async (contact_id: number) =>\n  axios\n    .get(contacts + contact_id + '/' + lyftRewards)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const redeemToken = async (contact_id: number, token: string) =>\n  axios\n    .post(contacts + contact_id + '/' + lyftRewards + token + '/redeem/')\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getProject = async (project_id: number) =>\n  axios\n    .get(projects + project_id)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const light_up_chinatown_id = 1;\n\nexport const sendImage = async (\n  signedUrl: string,\n  filename: string,\n  image: File\n) => {\n  return axios.put(signedUrl, image, {\n    headers: {\n      'Content-Type': image.type,\n    },\n  });\n};\n\nexport const getUploadUrl = async (filename: string, filetype: string) => {\n  return axios.post(gcs, {\n    file_name: filename,\n    file_type: filetype,\n  });\n};\n\nexport const uploadCrawlReceipts = async (\n  participating_seller_id: number,\n  contact_id: number,\n  amount: number,\n  receipt_url: string\n) =>\n  axios\n    .post(crawlReceipts, {\n      participating_seller_id,\n      contact_id,\n      amount,\n      receipt_url,\n    })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getCrawlRewards = async () =>\n  axios\n    .get(crawlRewards)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const redeemRaffle = async (contact_id: number, reward_id: number) =>\n  axios\n    .post(crawlRedemptions, { contact_id, reward_id })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const updateRaffle = async (reward_id: number) =>\n  axios\n    .put(crawlRedemptions, { reward_id })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getCrawlReceipts = async (contact_id: number) =>\n  axios\n    .get(contacts + contact_id + '/crawl_receipts/')\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getRedeemedRewards = async (contact_id: number) =>\n  axios\n    .get(contacts + contact_id + '/redemptions/')\n\n    .then((res) => res)\n    .catch((err) => err);\nexport const getAuthGoogle = async () =>\n  axios\n    .get(authGoogle)\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const requestAuthPasswordless = async (email: string) =>\n  axios\n    .post(authPasswordless, { email })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const validateSession = async () =>\n  axios.get(authValidate, {\n    validateStatus: (status) => status < 500,\n    withCredentials: true,\n  });\n\nexport const getCurrentPageVouchers = async (pageNo = '1') =>\n  axios\n    .get(vouchers20Count + pageNo, {\n      validateStatus: (status) => status < 500,\n      withCredentials: true,\n    })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getAllVouchers = async (pageNo = '1') =>\n  axios\n    .get(vouchers, {\n      validateStatus: (status) => status < 500,\n      withCredentials: true,\n    })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getVoucherMetadata = async () =>\n  axios\n    .get(vouchersMetadata, {\n      validateStatus: (status) => status < 500,\n      withCredentials: true,\n    })\n\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const getTotalContributions = async () =>\n  axios\n    .get(totalContributions)\n    .then((res) => res)\n    .catch((err) => err);\n"],"sourceRoot":""}