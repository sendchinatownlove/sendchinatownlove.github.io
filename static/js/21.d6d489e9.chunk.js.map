{"version":3,"sources":["components/GoogleSSOButton/GoogleLogo.tsx","components/GoogleSSOButton/GoogleSSOButtonLight.tsx","pages/DistributorTools/DistributorLoginView.tsx"],"names":["GoogleLogo","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","defaultProps","SSOButton","handleClick","Button","type","onClick","Text","styled","button","span","DistributorLoginView","useState","shouldShowModal","setDisplayModal","email","setEmail","redirect","setRedirect","useEffect","a","validateSession","status","asyncFetch","handleSubmit","e","preventDefault","requestAuthPasswordless","handleGoogleSSOClick","getAuthGoogle","data","window","open","authorization_url","Main","to","Nav","href","Header","Heading","Section","Paragraph","Form","onSubmit","EMAIL_REGEX","test","ErrorMessage","Label","LabelText","Input","value","onChange","target","pattern","source","SubmitBtn","disabled","SeparatorWrapper","Divider","SSOText","GoogleSSOButtonLight","Footer","ModalBg","Modal","ModalHeading","ModalText","CloseButton","main","nav","header","h1","section","p","form","label","input","div"],"mappings":"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","file":"static/js/21.d6d489e9.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  width: string;\n  height: string;\n}\n\nconst GoogleLogo = ({ width, height }: Props) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M17.64 9.20455C17.64 8.56636 17.5827 7.95273 17.4764 7.36364H9V10.845H13.8436C13.635 11.97 13.0009 12.9232 12.0477 13.5614V15.8195H14.9564C16.6582 14.2527 17.64 11.9455 17.64 9.20455V9.20455Z\"\n      fill=\"#4285F4\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9 18C11.43 18 13.4673 17.1941 14.9564 15.8195L12.0477 13.5614C11.2418 14.1014 10.2109 14.4205 9 14.4205C6.65591 14.4205 4.67182 12.8373 3.96409 10.71H0.957275V13.0418C2.43818 15.9832 5.48182 18 9 18V18Z\"\n      fill=\"#34A853\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M3.96409 10.71C3.78409 10.17 3.68182 9.59318 3.68182 9C3.68182 8.40682 3.78409 7.83 3.96409 7.29V4.95818H0.957273C0.347727 6.17318 0 7.54773 0 9C0 10.4523 0.347727 11.8268 0.957273 13.0418L3.96409 10.71V10.71Z\"\n      fill=\"#FBBC05\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9 3.57955C10.3214 3.57955 11.5077 4.03364 12.4405 4.92545L15.0218 2.34409C13.4632 0.891818 11.4259 0 9 0C5.48182 0 2.43818 2.01682 0.957275 4.95818L3.96409 7.29C4.67182 5.16273 6.65591 3.57955 9 3.57955V3.57955Z\"\n      fill=\"#EA4335\"\n    />\n  </svg>\n);\n\nGoogleLogo.defaultProps = {\n  width: '18',\n  height: '18',\n};\n\nexport default GoogleLogo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GoogleIcon from './GoogleLogo';\n\ninterface Props {\n  handleClick: (args: any) => void;\n}\n\nconst SSOButton = ({ handleClick }: Props) => {\n  return (\n    <Button type=\"button\" onClick={handleClick}>\n      <GoogleIcon width=\"36\" height=\"36\" />\n      <Text>Sign in with Google</Text>\n    </Button>\n  );\n};\n\nexport default SSOButton;\n\nconst Button = styled.button`\n  background: white;\n  // box-shadow: 0px 0px 1px rgba(0,0,0,0.12), 0 1px 1px rgba(0,0,0,0.24);\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.24);\n  border: 0px solid white;\n  // border-radius: 2px;\n  // width: 180px;\n  // height: 40px;\n  border-radius: 8px;\n  width: 370px;\n  height: 80px;\n  box-sizing: border-box;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n\n  &:hover,\n  &:active {\n    background: rgb(238, 238, 238);\n  }\n`;\n\nconst Text = styled.span`\n  margin-left: 24px;\n  font-size: 28px;\n  font-weight: 500;\n  font-family: 'Roboto', Helvetica, Arial, sans-serif;\n  color: rgba(0, 0, 0, 0.54);\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Logo } from '../../components/Logos/Logos';\nimport GoogleSSOButtonLight from '../../components/GoogleSSOButton/GoogleSSOButtonLight';\nimport Footer from '../../components/Footer/Footer';\n\nimport {\n  getAuthGoogle,\n  validateSession,\n  requestAuthPasswordless,\n} from '../../utilities/api/interactionManager';\nimport { EMAIL_REGEX } from '../../utilities/hooks/ModalPaymentContext/constants';\n\nconst DistributorLoginView = () => {\n  const [shouldShowModal, setDisplayModal] = useState(false);\n  const [email, setEmail] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const res = await validateSession();\n      if (res.status === 200) {\n        setRedirect(true);\n      }\n    };\n    asyncFetch();\n  }, []);\n\n  const handleChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await requestAuthPasswordless(email);\n    if (res.status === 200) {\n      setDisplayModal(true);\n    }\n  };\n\n  const handleGoogleSSOClick = async () => {\n    const { data } = await getAuthGoogle();\n    window.open(data.authorization_url, '_self');\n  };\n  return (\n    <Main>\n      {redirect && <Redirect to={'/distributor/dashboard'} />}\n      <Nav>\n        <a href=\"/\">\n          <Logo />\n        </a>\n      </Nav>\n      <Header>\n        <Heading>Distributor Dashboard: Gift-a-Meal Tracker</Heading>\n      </Header>\n      <Section>\n        <Paragraph>\n          Please enter the email you have provided to the Send Chinatown Love\n          Team. You'll receive a unique link in your email to access your Gift a\n          Meal Distributor Dashboard shortly - this link will expire in 10\n          minutes.\n        </Paragraph>\n\n        <Form onSubmit={handleSubmit}>\n          {email !== '' && !EMAIL_REGEX.test(email) && (\n            <ErrorMessage>Error: Invalid Email Address</ErrorMessage>\n          )}\n          <Label>\n            <LabelText>Email Address</LabelText>\n            <Input\n              value={email}\n              onChange={handleChange}\n              type=\"email\"\n              pattern={EMAIL_REGEX.source}\n            />\n          </Label>\n          <SubmitBtn disabled={email === '' || !EMAIL_REGEX.test(email)}>\n            Send Link\n          </SubmitBtn>\n        </Form>\n        <span>\n          Forgot your email? Send us a message at{' '}\n          <a href=\"mailto:hello@sendchinatownlove.com\">\n            hello@sendchinatownlove.com\n          </a>\n        </span>\n        <SeparatorWrapper>\n          <Divider />\n          <SSOText>Or sign in with Google</SSOText>\n        </SeparatorWrapper>\n        <GoogleSSOButtonLight handleClick={handleGoogleSSOClick} />\n      </Section>\n      <Footer />\n      {shouldShowModal && (\n        <ModalBg>\n          <Modal>\n            <ModalHeading>Single Sign On Link Sent!</ModalHeading>\n            <ModalText>\n              Magic link sent! Please Check your email for a link to the\n              Distributor Dashboard!\n            </ModalText>\n            <CloseButton type=\"button\" onClick={() => setDisplayModal(false)}>\n              Close\n            </CloseButton>\n          </Modal>\n        </ModalBg>\n      )}\n    </Main>\n  );\n};\n\nexport default DistributorLoginView;\n\nconst Main = styled.main`\n  position: relative;\n  width: 100%;\n  min-height: 100%;\n`;\n\nconst Nav = styled.nav`\n  padding: 22px 130px;\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  height: 218px;\n  background: rgb(168, 25, 46);\n  padding: 82px 0 0 129px;\n  box-sizing: border-box;\n`;\n\nconst Heading = styled.h1`\n  color: white;\n  font-size: 24px;\n`;\n\nconst Section = styled.section`\n  margin: 0 130px 80px;\n`;\n\nconst Paragraph = styled.p`\n  margin: 54px 0 92px;\n  font-size: 24px;\n  width: 821px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 680px auto;\n  grid-template-rows: 20px 100px;\n  gap: 0px 54px;\n  grid-template-areas:\n    'err err'\n    'input submit';\n`;\n\nconst Label = styled.label`\n  display: inline-block;\n  width: 680px;\n  grid-area: input;\n`;\n\nconst LabelText = styled.span`\n  height: 28px;\n  margin-bottom: 6px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 28px;\n  height: 56px;\n  border: 1px solid rgb(196, 196, 196);\n  border-radius: 5px;\n\n  &:invalid {\n    border: 1px solid red;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  grid-area: err;\n  color: red;\n  width: 100%;\n`;\n\nconst SubmitBtn = styled.button`\n  grid-area: submit;\n  align-self: center;\n  width: 348px;\n  height: 56px;\n  box-sizing: border-box;\n  padding: 18px 0;\n  color: white;\n  background: rgb(18, 18, 18);\n  font-weight: bold;\n  border: 0px solid white;\n  border-radius: 50px;\n  text-transform: uppercase;\n\n  &:disabled,\n  :disabled:hover,\n  :disabled:active {\n    background: rgb(139, 139, 139);\n  }\n  &:hover {\n    background: rgb(171, 25, 46);\n  }\n`;\n\nconst SeparatorWrapper = styled.div`\n  margin: 74px 0 40px;\n  width: 372px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\nconst Divider = styled.div`\n  z-index: -1;\n  position: absolute;\n  top: 10px;\n  width: 372px;\n  border-bottom: 1px solid rgb(156, 156, 156);\n`;\n\nconst SSOText = styled.span`\n  font-size: 18px;\n  background: white;\n  width: 212px;\n  text-align: center;\n`;\n\nconst ModalBg = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100%;\n`;\n\nconst Modal = styled.section`\n  background: white;\n  width: 810px;\n  height: 364px;\n  padding: 32px 54px;\n  position: sticky;\n  top: calc((100% - 364px) * 0.5);\n  left: calc((100vw - 810px) * 0.5);\n  display: grid;\n  grid-template-rows: repeat(3, 1fr);\n  gap: 32px;\n  grid-template-areas:\n    'heading'\n    'body'\n    'footer';\n`;\n\nconst ModalHeading = styled.h1`\n  grid-area: heading;\n  font-weight: 600;\n  font-size: 40px;\n`;\n\nconst ModalText = styled.p`\n  grid-area: body;\n  font-size: 24px;\n`;\n\nconst CloseButton = styled.button`\n  grid-area: footer;\n  width: 200px;\n  height: 57px;\n  font-weight: 700;\n  box-sizing: border-box;\n  text-transform: uppercase;\n  background: rgb(18, 18, 18);\n  color: white;\n  border: 1px;\n  border-radius: 50px;\n  &:hover {\n    background: rgb(171, 25, 46);\n  }\n`;\n"],"sourceRoot":""}